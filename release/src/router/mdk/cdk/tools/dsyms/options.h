/*******************************************************************************
 * $Id: options.h,v 1.9 Broadcom SDK $
 * $Copyright$
 *
 ******************************************************************************/






/*^*****************************************************************************
 * 
 * PROGRAM OPTIONS AND OPTION PROCESSING
 * 
 * This header defines the program options and default values used by DSYM. 
 *
 ******************************************************************************/


#ifndef __DSYM_OPTIONS_H__
#define __DSYM_OPTIONS_H__


/*******************************************************************************
 *
 * These are the default values for all autogenerated source structures. 
 *
 ******************************************************************************/

#define CDK_CONFIG_DEFINE_SIZE_T 0

/* The name of the dynamic header file */
#define OPT_DYN_HEADER_DIR "include/cdk/chip"
#define OPT_DYN_HEADER_FILE "all_defs.h"
#define OPT_DYN_HEADER_NAME "ALL_DEFS"
#define OPT_DYN_HEADER_HEADERS "\"cdk/cdk_dsymbols.h\"" 


/* The output directory for the symbol dispatch tables */
#define OPT_DYN_DISPATCH_DIR "dsym/dispatch"
#define OPT_DYN_DISPATCH_HEADERS "\"cdk/cdk_symbols.h\",\"cdk/cdk_dsymbols.h\""

/* The output directory for the field descriptor structures */
#define OPT_DYN_FIELD_DIR "dsym/fields"
#define OPT_DYN_FIELD_HEADERS "\"cdk/cdk_symbols.h\""

/* The output directory for the individual chip dsymbol structures */
#define OPT_DYN_CHIP_DIR "dsym/chips"
#define OPT_DYN_CHIP_HEADERS "\"cdk/cdk_dsymbols.h\""

/* The output directory for the symbol table files */
#define OPT_DYN_SYMS_DIR "dsym/syms"
#define OPT_DYN_SYMS_HEADERS "<cdk/cdk_symbols.h>,\"allfields.h\""

/* The name of the allfields header file */
#define OPT_DYN_ALLFIELDS_HEADER_FILE "allfields.h"
#define OPT_DYN_ALLFIELDS_HEADER_NAME "ALLFIELDS"
#define OPT_DYN_ALLFIELDS_HEADERS "<cdk/cdk_symbols.h>"

/* The name of the allstrings source file */
#define OPT_DYN_ALLSTRINGS_FILE   "allstrings.c"

/* The nane of the symbol offsets header file */
#define OPT_DYN_OFFSETS_HEADER "soffsets.h"
#define OPT_DYN_OFFSETS_HEADER_NAME "SOFFSETS"

/* The name used for the allfields enumeration */
#define OPT_ALLFIELDS_ENUM_E "cdk_allfields_e"

/* The name used for the allfields typedef */
#define OPT_ALLFIELDS_ENUM_T "cdk_allfields_t"

/* The prefix to be placed on enum values */
#define OPT_ALLFIELDS_ENUM_PREFIX "cdkField_"

/* The name of the DSYMBOL structure */ 
#define OPT_DSYM_STRUCT_T "cdk_dsymbol_t"

/* Specifies the name of the DSYM structure used for field descriptors */
#define OPT_DSYM_FIELD_T "uint32_t"

/* How to specify the last field in a field descriptor */
#define OPT_DSYM_FIELD_FLAG_LAST "CDK_DSYM_FIELD_FLAG_LAST"

/* Prefix to be placed in front of all generated variables and structures */
#define OPT_DSYM_PREFIX   "cdk_dsym_"

/* The UINT32_T type */
#define OPT_UINT32_T    "uint32_t"

/* The name of the function for port-based register reads */
#define OPT_REG_PORT_READ "cdk_dsym_port_reg_read"

/* The name of the function for port-based register writes */
#define OPT_REG_PORT_WRITE "cdk_dsym_port_reg_write"

/* The name of the function for port-based register reads */
#define OPT_REG_BLOCKS_READ "cdk_dsym_blocks_reg_read"

/* The name of the function for port-based register writes */
#define OPT_REG_BLOCKS_WRITE "cdk_dsym_blocks_reg_write"

/* The name of the function for indexed register reads */
#define OPT_REG_INDEXED_READ "cdk_dsym_indexed_reg_read"

/* The name of the function for indexed register writes */
#define OPT_REG_INDEXED_WRITE "cdk_dsym_indexed_reg_write"

/* The name of the function for register reads */
#define OPT_REG_READ "cdk_dsym_reg_read"

/* The name of the function for register writes */
#define OPT_REG_WRITE "cdk_dsym_reg_write"

/* The name of the function for memory reads */
#define OPT_MEM_READ "cdk_dsym_mem_read"

/* The name of the function for memory writes */
#define OPT_MEM_WRITE "cdk_dsym_mem_write"

/* The name of the function returning the minimum index value of a symbol */
#define OPT_INDEX_MIN "cdk_dsym_min"

/* The name of the function returning the maximum index value of a symbol */
#define OPT_INDEX_MAX "cdk_dsym_max"

/* The name of the function returning the size of a symbol */
#define OPT_INDEX_SIZE "cdk_dsym_size"

/* The name of the function returning the address of a symbol */
#define OPT_ADDR_GET "cdk_dsym_addr"

/* The name of the function returning a field pointer for a symbol */
#define OPT_FIELD_PTR_GET "cdk_dsym_field_ptr_get"

/* The name of the function for getting 32 bit field values */
#define OPT_FIELD32_GET "cdk_dsym_field32_get"

/* The name of the function for setting 32 bit field values */
#define OPT_FIELD32_SET "cdk_dsym_field32_set"

/* The name of the function for getting arbitrary sized field values */
#define OPT_FIELD_GET "cdk_dsym_field_get"

/* The name of the function for setting arbitrary sized field values */
#define OPT_FIELD_SET "cdk_dsym_field_set"


/*******************************************************************************
 * 
 * Minimum and maximum allocation values used inside the DSYM program. 
 *
 ******************************************************************************/

/* Maximum number of symbols */
#ifndef DSYM_MAX_SYM_COUNT
#define DSYM_MAX_SYM_COUNT                   16000
#endif

/* Maximum number of fields/symbol */
#ifndef DSYM_MAX_FIELDS_PER_SYMBOL
#define DSYM_MAX_FIELDS_PER_SYMBOL             256
#endif

/* Maximum number of unique field names */
#ifndef DSYM_MAX_FIELD_COUNT
#define DSYM_MAX_FIELD_COUNT                     32000
#endif


/*******************************************************************************
 *
 * These are the routines and definitions for the DSYM program command line 
 * options. 
 *
 ******************************************************************************/

/*
 * Parsing Program Options
 */
extern int parse_options(int argc, char* argv[]); 

/*
 * Retreive a string option value
 */
extern const char* soption(const char* opt); 

/*
 * Retrieve an integer option value
 */
extern int ioption(const char* opt); 

/* 
 * Help Message
 */
extern void dsym_help(void); 


/* Option: Output Directory. Usually set to $CDK */
#define DSYM_OPTION_DYN_OUTPUT_DIR "od"
#define DSYM_DYN_OUTPUT_DIR ""
#define OPT_DYN_OUTPUT_DIR soption(DSYM_OPTION_DYN_OUTPUT_DIR)

/* Option: Output type. Stdout, single files, or indiviual files */
#define DSYM_OPTION_DYN_OUTPUT_TYPE "ot"
#define DSYM_DYN_OUTPUT_TYPE "single"
#define OPT_DYN_OUTPUT_TYPE soption(DSYM_OPTION_DYN_OUTPUT_TYPE)

/* Option: Include all chips. */
#define DSYM_OPTION_INCLUDE_ALL "all"
#define OPT_INCLUDE_ALL ioption(DSYM_OPTION_INCLUDE_ALL)


#define OPT_DIR_SEPARATOR "/"

#endif /* __DSYM_OPTIONS_H__ */
