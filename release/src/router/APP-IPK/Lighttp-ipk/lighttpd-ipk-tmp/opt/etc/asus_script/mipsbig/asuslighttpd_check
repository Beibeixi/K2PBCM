#! /bin/sh

if [ -f "/userfs/bin/tcapi" ];then
	APPS_DEV=`/userfs/bin/tcapi get Apps_Entry apps_dev`
	APPS_MOUNTED_PATH=`/userfs/bin/tcapi get Apps_Entry apps_mounted_path`
	APPS_INSTALL_FOLDER=`/userfs/bin/tcapi get Apps_Entry apps_install_folder`
	APPS_SERVER=`/userfs/bin/tcapi get Apps_Entry apps_ipkg_server`
	DM_HTTP_PORT=`/userfs/bin/tcapi get Apps_Entry dm_http_port`
else
	APPS_DEV=`nvram get apps_dev`
	APPS_MOUNTED_PATH=`nvram get apps_mounted_path`
	APPS_INSTALL_FOLDER=`nvram get apps_install_folder`
	APPS_SERVER=`nvram get apps_ipkg_old`
	DM_HTTP_PORT=`nvram get dm_http_port`
fi
APPS_INSTALL_PATH=$APPS_MOUNTED_PATH/$APPS_INSTALL_FOLDER
is_arm_machine=`uname -m |grep arm`
IPKG_ERROR=""

echo "check asuslighttpd start"
#configure file check
if [ ! -f "$APPS_INSTALL_PATH/etc/asus_conf.d/access_log.conf" ]; then
	echo "server.modules += ( \"mod_accesslog\" )" >$APPS_INSTALL_PATH/etc/asus_conf.d/access_log.conf
	echo "accesslog.filename          = log_root + \"/access.log\"" >>$APPS_INSTALL_PATH/etc/asus_conf.d/access_log.conf
fi
if [ ! -f "$APPS_INSTALL_PATH/etc/asus_conf.d/cgi.conf" ]; then
	echo "server.modules += ( \"mod_cgi\" )" >$APPS_INSTALL_PATH/etc/asus_conf.d/cgi.conf
	echo "cgi.assign                 = ( \".pl\"  => \"/usr/bin/perl\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/cgi.conf
	echo "                               \".cgi\" => \"\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/cgi.conf
	echo "                               \".rb\"  => \"/usr/bin/ruby\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/cgi.conf
	echo "                               \".erb\" => \"/usr/bin/eruby\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/cgi.conf
	echo "                               \".py\"  => \"/usr/bin/python\" )" >>$APPS_INSTALL_PATH/etc/asus_conf.d/cgi.conf
fi
if [ ! -f "$APPS_INSTALL_PATH/etc/asus_conf.d/dirlisting.conf" ]; then
	echo "dir-listing.activate      = \"disable\"" >$APPS_INSTALL_PATH/etc/asus_conf.d/dirlisting.conf
	echo "dir-listing.hide-dotfiles = \"disable\"" >>$APPS_INSTALL_PATH/etc/asus_conf.d/dirlisting.conf
	echo "dir-listing.exclude       = ( \"~$\" )" >>$APPS_INSTALL_PATH/etc/asus_conf.d/dirlisting.conf
	echo "dir-listing.encoding = \"UTF-8\"" >>$APPS_INSTALL_PATH/etc/asus_conf.d/dirlisting.conf
	echo "dir-listing.hide-header-file = \"disable\"" >>$APPS_INSTALL_PATH/etc/asus_conf.d/dirlisting.conf
	echo "dir-listing.show-header = \"disable\"" >>$APPS_INSTALL_PATH/etc/asus_conf.d/dirlisting.conf
	echo "dir-listing.hide-readme-file = \"disable\"" >>$APPS_INSTALL_PATH/etc/asus_conf.d/dirlisting.conf
	echo "dir-listing.show-readme = \"disable\"" >>$APPS_INSTALL_PATH/etc/asus_conf.d/dirlisting.conf
fi
if [ ! -f "$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf" ]; then
	echo "mimetype.use-xattr        = \"disable\"" >$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "mimetype.assign             = (" >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".pdf\"          =>      \"application/pdf\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".sig\"          =>      \"application/pgp-signature\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".spl\"          =>      \"application/futuresplash\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".class\"        =>      \"application/octet-stream\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".ps\"           =>      \"application/postscript\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".torrent\"      =>      \"application/x-bittorrent\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".dvi\"          =>      \"application/x-dvi\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".gz\"           =>      \"application/x-gzip\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".pac\"          =>      \"application/x-ns-proxy-autoconfig\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".swf\"          =>      \"application/x-shockwave-flash\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".tar.gz\"       =>      \"application/x-tgz\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".tgz\"          =>      \"application/x-tgz\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".tar\"          =>      \"application/x-tar\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".zip\"          =>      \"application/zip\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".mp3\"          =>      \"audio/mpeg\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".m3u\"          =>      \"audio/x-mpegurl\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".wma\"          =>      \"audio/x-ms-wma\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo " 	\".wax\"          =>      \"audio/x-ms-wax\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".ogg\"          =>      \"application/ogg\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".wav\"          =>      \"audio/x-wav\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".gif\"          =>      \"image/gif\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".jpg\"          =>      \"image/jpeg\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".jpeg\"         =>      \"image/jpeg\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".png\"          =>      \"image/png\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".xbm\"          =>      \"image/x-xbitmap\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".xpm\"          =>      \"image/x-xpixmap\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".xwd\"          =>      \"image/x-xwindowdump\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".css\"          =>      \"text/css\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".html\"         =>      \"text/html\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".asp\"          =>      \"text/html\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".htm\"          =>      \"text/html\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".js\"           =>      \"text/javascript\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".asc\"          =>      \"text/plain\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".c\"            =>      \"text/plain\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".cpp\"          =>      \"text/plain\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".log\"          =>      \"text/plain\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".conf\"         =>      \"text/plain\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".text\"         =>      \"text/plain\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".txt\"          =>      \"text/plain\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".spec\"         =>      \"text/plain\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".dtd\"          =>      \"text/xml\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".xml\"          =>      \"text/xml\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".mpeg\"         =>      \"video/mpeg\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".mpg\"          =>      \"video/mpeg\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".mov\"          =>      \"video/quicktime\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".qt\"           =>      \"video/quicktime\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".avi\"          =>      \"video/x-msvideo\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".asf\"          =>      \"video/x-ms-asf\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".asx\"          =>      \"video/x-ms-asf\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".wmv\"          =>      \"video/x-ms-wmv\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".bz2\"          =>      \"application/x-bzip\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".tbz\"          =>      \"application/x-bzip-compressed-tar\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".tar.bz2\"      =>      \"application/x-bzip-compressed-tar\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \".rpm\"          =>      \"application/x-rpm\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo "  \"\"              =>      \"application/octet-stream\"," >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
	echo " )" >>$APPS_INSTALL_PATH/etc/asus_conf.d/mime.conf
fi
if [ ! -f "$APPS_INSTALL_PATH/etc/asus_modules.conf" ]; then
	echo "server.modules = (" >$APPS_INSTALL_PATH/etc/asus_modules.conf
	echo "  \"mod_access\"," >>$APPS_INSTALL_PATH/etc/asus_modules.conf
	echo "  \"mod_alias\"," >>$APPS_INSTALL_PATH/etc/asus_modules.conf
	echo "  \"mod_auth\"," >>$APPS_INSTALL_PATH/etc/asus_modules.conf
	echo ")" >>$APPS_INSTALL_PATH/etc/asus_modules.conf
	echo "include \"asus_conf.d/cgi.conf\"" >>$APPS_INSTALL_PATH/etc/asus_modules.conf
fi
#bin check
if [ -f "$APPS_INSTALL_PATH/bin/asus_lighttpd" ] && [ -f "$APPS_INSTALL_PATH/lib/mod_access.so" ] && [ -f "$APPS_INSTALL_PATH/lib/mod_alias.so" ] && [ -f "$APPS_INSTALL_PATH/lib/mod_auth.so" ] && [ -f "$APPS_INSTALL_PATH/lib/mod_cgi.so" ] && [ -f "$APPS_INSTALL_PATH/lib/mod_dirlisting.so" ] && [ -f "$APPS_INSTALL_PATH/lib/mod_indexfile.so" ] && [ -f "$APPS_INSTALL_PATH/lib/mod_rewrite.so" ] && [ -f "$APPS_INSTALL_PATH/lib/mod_staticfile.so" ]; then
	echo "asuslighttpd_ipk is OK"
else
	echo "asuslighttpd_ipk is error,we must reinstall it"
	LIGHTTPD_VER=`cat "$APPS_INSTALL_PATH/lib/ipkg/info/asuslighttpd.control" | grep Version`
	LIGHTTPD_VER=`echo $LIGHTTPD_VER | awk 'BEGIN{FS=": "}{print $2}'`
	$APPS_INSTALL_PATH/bin/ipkg remove asuslighttpd -force-depends
	IPKG_ERROR="asuslighttpd"
	wget -c	-q -t 2 -T 30 http://nw-dlcdnet.asus.com/asusware/mipsbig/stable/asuslighttpd_"$LIGHTTPD_VER"_mipsbig.ipk -O /opt/tmp/asuslighttpd_"$LIGHTTPD_VER"_mipsbig.ipk
	$APPS_INSTALL_PATH/bin/ipkg install /opt/tmp/asuslighttpd_"$LIGHTTPD_VER"_mipsbig.ipk
	rm -f /opt/tmp/asuslighttpd_"$LIGHTTPD_VER"_mipsbig.ipk
################

	APP_UCLIBC_VERSION=0.9.28
if [ -f "/userfs/bin/tcapi" ];then
	APPS_DEV=`/userfs/bin/tcapi get Apps_Entry apps_dev`
	APPS_MOUNTED_PATH=`/userfs/bin/tcapi get Apps_Entry apps_mounted_path`
	APPS_INSTALL_FOLDER=`/userfs/bin/tcapi get Apps_Entry apps_install_folder`
	APPS_INSTALL_PATH=$APPS_MOUNTED_PATH/$APPS_INSTALL_FOLDER

	LANGUAGE_R=`/userfs/bin/tcapi get SysInfo_Entry preferred_lang`

	PRODUCTID=`/userfs/bin/tcapi get SysInfo_Entry ProductName`
	LAN_IP=`/userfs/bin/tcapi get Lan_Entry IP`
	MISCR_HTTPPORT_X=`/userfs/bin/tcapi get Firewall_Entry misc_httpport_x`
	MISCR_HTTP_X=`/userfs/bin/tcapi get Firewall_Entry misc_http_x`
	HTTP_PASSWD=`/userfs/bin/tcapi get Account_Entry0 web_passwd`
	DDNS_ENABLE_X=`/userfs/bin/tcapi get Ddns_Entry Active`
	DDNS_HOSTNAME_X=`/userfs/bin/tcapi get Ddns_Entry MYHOST`
	RFW_ENABLE_X=`/userfs/bin/tcapi get Firewall_Entry fw_enable_x`
else
	PATH=/sbin:/usr/sbin:/bin:/usr/bin:/opt/bin

	LANGUAGE_R=`nvram get preferred_lang`
	PRODUCTID=`nvram get productid`
	LAN_IP=`nvram get lan_ipaddr`
	MISCR_HTTPPORT_X=`nvram get misc_httpport_x`
	MISCR_HTTP_X=`nvram get misc_http_x`
	HTTP_PASSWD=`nvram get http_passwd`
	DDNS_ENABLE_X=`nvram get ddns_enable_x`
	DDNS_HOSTNAME_X=`nvram get ddns_hostname_x`
	RFW_ENABLE_X=`nvram get fw_enable_x`
fi
	chmod -R 777 $APPS_INSTALL_PATH/bin/

	chmod -R 777 $APPS_INSTALL_PATH/etc

	sh /tmp/APPS/Lighttpd/Script/asus_check_general general-check&

	dir_control_file=$APPS_INSTALL_PATH/etc/dm2_general.conf

	if [ ! -f "$dir_control_file" ]; then
		echo $dir_control_file
	else
		MISC_HTTP_X_TMP=`cat "$dir_control_file" |grep "MISC_HTTP_X="`
		MISC_HTTP_X=`echo $MISC_HTTP_X_TMP |awk 'BEGIN{FS="= "}{print $2}'`
		APPS_DL_SHARE_TMP=`cat "$dir_control_file" |grep "APPS_DL_SHARE="`
		APPS_DL_SHARE=`echo $APPS_DL_SHARE_TMP |awk 'BEGIN{FS="= "}{print $2}'`
		DM_PORT_TMP=`cat "$dir_control_file" |grep "DM_PORT="`
		DM_PORT=`echo $DM_PORT_TMP |awk 'BEGIN{FS="= "}{print $2}'`
	fi

	if [ ! -f "$APPS_INSTALL_PATH/etc/asus_lighttpd.conf" ]; then
		sh /tmp/APPS/Lighttpd/Script/asus_lighttpd_backup recover
	else
		CONFIG_PORT=`cat "$APPS_INSTALL_PATH/etc/asus_lighttpd.conf" | grep "server.port" |awk 'BEGIN{FS="= "}{print $2}'`
		if [ -n "$DM_HTTP_PORT" ]&&[ "$DM_HTTP_PORT" != "$CONFIG_PORT" ]; then
			sed -i "96s/^.*$/server.port = $DM_HTTP_PORT/" $APPS_INSTALL_PATH/etc/asus_lighttpd.conf
		fi
	fi
fi
#####libs check
#zlib check
ZLIB=`ls $APPS_INSTALL_PATH/lib/ |grep libz.so`
ZLIB_EXIST=0
for zlibobj in $ZLIB; do
	if [ -L "$APPS_INSTALL_PATH/lib/$zlibobj" ]; then
		continue;
	elif [ -f "$APPS_INSTALL_PATH/lib/$zlibobj" ]; then
		ZLIB_EXIST=1;
		break;
	fi
done
if [ $ZLIB_EXIST -eq 0 ]; then
	echo "ZLIB_IPKG is error,we must reinstall it"
	ZLIB_VER=`cat "$APPS_INSTALL_PATH/lib/ipkg/info/zlib.control" | grep Version`
	ZLIB_VER=`echo $ZLIB_VER | awk 'BEGIN{FS=": "}{print $2}'`
	IPKG_ERROR="zlib"
	wget -q -P /opt/tmp http://nw-dlcdnet.asus.com/asusware/mipsbig/stable/zlib_"$ZLIB_VER"_mipsbig.ipk
	$APPS_INSTALL_PATH/bin/ipkg install /opt/tmp/zlib_"$ZLIB_VER"_mipsbig.ipk
	rm -f /opt/tmp/zlib_"$ZLIB_VER"_mipsbig.ipk
fi
#pcre check
PCRE=`ls $APPS_INSTALL_PATH/lib/ |grep libpcre.so`
PCRE_EXIST=0
for pcreobj in $PCRE; do
	if [ -L "$APPS_INSTALL_PATH/lib/$pcreobj" ]; then
		continue;
	elif [ -f "$APPS_INSTALL_PATH/lib/$pcreobj" ]; then
		PCRE_EXIST=1;
		break;
	fi
done
if [ $PCRE_EXIST -eq 0 ]; then
	echo "PCRE_IPKG is error,we must reinstall it"
	PCRE_VER=`cat "$APPS_INSTALL_PATH/lib/ipkg/info/pcre.control" | grep Version`
	PCRE_VER=`echo $PCRE_VER | awk 'BEGIN{FS=": "}{print $2}'`
	IPKG_ERROR="pcre"
	wget -q -P /opt/tmp http://nw-dlcdnet.asus.com/asusware/mipsbig/stable/pcre_"$PCRE_VER"_mipsbig.ipk
	$APPS_INSTALL_PATH/bin/ipkg install /opt/tmp/pcre_"$PCRE_VER"_mipsbig.ipk
	rm -f /opt/tmp/pcre_"$PCRE_VER"_mipsbig.ipk
fi
#openssl
SSL=`ls $APPS_INSTALL_PATH/lib/ |grep libssl.so`
SSL_EXIST=0
for sslobj in $SSL; do
	if [ -L "$APPS_INSTALL_PATH/lib/$sslobj" ]; then
		continue;
	elif [ -f "$APPS_INSTALL_PATH/lib/$sslobj" ]; then
		SSL_EXIST=1;
		break;
	fi
done
CRYPTO=`ls $APPS_INSTALL_PATH/lib/ |grep libcrypto.so`
CRYPTO_EXIST=0
for cryptoobj in $CRYPTO; do
	if [ -L "$APPS_INSTALL_PATH/lib/$cryptoobj" ]; then
		continue;
	elif [ -f "$APPS_INSTALL_PATH/lib/$cryptoobj" ]; then
		CRYPTO_EXIST=1;
		break;
	fi
done
if [ $SSL_EXIST -eq 0 ] || [ $CRYPTO_EXIST -eq 0 ]; then
	echo "SSL_IPKG is error,we must reinstall it"
	SSL_VER=`cat "$APPS_INSTALL_PATH/lib/ipkg/info/asusopenssl.control" | grep Version`
	SSL_VER=`echo $SSL_VER | awk 'BEGIN{FS=": "}{print $2}'`
	IPKG_ERROR="asusopenssl"
	wget -q -P /opt/tmp http://nw-dlcdnet.asus.com/asusware/mipsbig/stable/asusopenssl_"$SSL_VER"_mipsbig.ipk
	$APPS_INSTALL_PATH/bin/ipkg install /opt/tmp/asusopenssl_"$SSL_VER"_mipsbig.ipk
	rm -f /opt/tmp/asusopenssl_"$SSL_VER"_mipsbig.ipk
fi
#spawn-fcgi
if [ ! -f "$APPS_INSTALL_PATH/bin/spawn-fcgi" ] || [ ! -f "$APPS_INSTALL_PATH/share/man/man1/spawn-fcgi.1" ]; then
	echo "spawn-fcgi_ipkg is error,we must reinstall it"
	FCGI=`cat "$APPS_INSTALL_PATH/lib/ipkg/info/spawn-fcgi.control" | grep Version`
	FCGI=`echo $FCGI | awk 'BEGIN{FS=": "}{print $2}'`
	IPKG_ERROR="spawn-fcgi"
	wget -q -P /opt/tmp http://nw-dlcdnet.asus.com/asusware/mipsbig/stable/spawn-fcgi_"$FCGI"_mipsbig.ipk
	$APPS_INSTALL_PATH/bin/ipkg install /opt/tmp/spawn-fcgi_"$FCGI"_mipsbig.ipk
	rm -f /opt/tmp/spawn-fcgi_"$FCGI"_mipsbig.ipk
fi
if [ -n "$IPKG_ERROR" ]; then
	app_base_link.sh
	app_base_library.sh
	app_move_to_pool.sh $APPS_DEV
fi
echo "check asuslighttpd end"
