#! /bin/sh
#echo `date +%T`>/tmp/magic.log
rm -rf /tmp/asus_router_tag
APP_UCLIBC_VERSION=0.9.28

#PATH=/sbin:/usr/sbin:/bin:/usr/bin:/opt/bin

if [ -f "/userfs/bin/tcapi" ];then
APPS_DEV=`/userfs/bin/tcapi get Apps_Entry apps_dev`
APPS_MOUNTED_PATH=`/userfs/bin/tcapi get Apps_Entry apps_mounted_path`
APPS_INSTALL_FOLDER=`/userfs/bin/tcapi get Apps_Entry apps_install_folder`
APPS_INSTALL_PATH=$APPS_MOUNTED_PATH/$APPS_INSTALL_FOLDER

MEMORY_TOTAL=`free | head -2 |tail -1 |awk '{print $2}'`

LANGUAGE_R=`/userfs/bin/tcapi get SysInfo_Entry preferred_lang`

#PRODUCTID=`/userfs/bin/tcapi get SysInfo_Entry ProductName`
PRODUCTID=`/userfs/bin/tcapi get SysInfo_Entry odmpid`
if [ "$PRODUCTID" == "no attribute information" ]; then
   PRODUCTID=`/userfs/bin/tcapi get SysInfo_Entry ProductName`
fi
LAN_IP=`/userfs/bin/tcapi get Lan_Entry IP`
MISCR_HTTPPORT_X=`/userfs/bin/tcapi get Firewall_Entry misc_httpport_x`
MISCR_HTTPSPORT_X=`/userfs/bin/tcapi get Firewall_Entry misc_httpsport_x`
HTTPS_LANPORT=`/userfs/bin/tcapi get Https_Entry https_lanport`
MISCR_HTTP_X=`/userfs/bin/tcapi get Firewall_Entry misc_http_x`
HTTP_PASSWD=`/userfs/bin/tcapi get Account_Entry0 web_passwd`

#get Wan ip in DSL-wrt, by judging the dualwan status to get the real ip
	DualWan=`/userfs/bin/tcapi get Dualwan_Entry wans_dualwan`
	if [ -n "$DualWan" ] || [ "$DualWan" != "no attribute information" ] || [ "$DualWan" != "none" ]
	then
		Pri_Wan=`echo $DualWan | awk '{printf("%s\n", $1);}'`
		Sec_Wan=`echo $DualWan | awk '{printf("%s\n", $2);}'`
	
		#get the first wan type
		if [ "$Pri_Wan" = "lan" ]; then
			Pri_unit=12
		elif [ "$Pri_Wan" = "usb" ]; then
			Pri_unit=11
		elif [ "$Pri_Wan" = "wan" ]; then
			Pri_unit=10
		elif [ "$Pri_Wan" = "dsl" ]; then
			DSLMode=`/userfs/bin/tcapi get Wan_Common DSLMode`
			if [ "$DSLMode" = "VDSL" ]
			then
				Pri_unit=8
			else 
				Pri_unit=0
			fi
		fi
		Pri_Wan_IP=`/userfs/bin/tcapi get Wanduck_Common wan"$Pri_unit"_ipaddr`
		#get sec wan type, if sec_wan=none then jump this
		if [ "$Sec_Wan" != "none" ]; then
			if [ "$Sec_Wan" = "lan" ]; then
				Sec_unit=12
			elif [ "$Sec_Wan" = "usb" ]; then
				Sec_unit=11
			elif [ "$Sec_Wan" = "wan" ]; then
				Sec_unit=10
			elif [ "$Sec_Wan" = "dsl" ]; then
				DSLMode2=`/userfs/bin/tcapi get Wan_Common DSLMode`
				if [ "$DSLMode2" = "VDSL" ]
				then
					Sec_unit=8
				else
					Sec_unit=0
				fi
			fi

			Sec_Wan_IP=`/userfs/bin/tcapi get Wanduck_Common wan"$Sec_unit"_ipaddr`
	
			if [ -z "$Pri_Wan_IP" ] || [ "$Pri_Wan_IP" = "no attribute information" ] \
			|| [ "$Pri_Wan_IP" = "0.0.0.0" ]
			then
				#use 0.0.0.0 instead of "no attribute information"
				if [ -z "$Sec_Wan_IP" ] || [ "$Sec_Wan_IP" = "no attribute information" ]
				then
					WAN_IP="0.0.0.0"
				else
					WAN_IP=$Sec_Wan_IP
				fi
			else
				WAN_IP=$Pri_Wan_IP
			fi
		else
		#use 0.0.0.0 instead of "no attribute information"
			if [ -z "$Pri_Wan_IP" ] || [ "$Pri_Wan_IP" = "no attribute information" ]
			then
				WAN_IP="0.0.0.0"
			else
				WAN_IP=$Pri_Wan_IP
			fi
		fi
	else
		unit=`/userfs/bin/tcapi get Wanduck_Common wan_primary`
		WAN_IP=`/userfs/bin/tcapi get Wanduck_Common wan"$unit"_ipaddr`
		if [ -z "$Pri_Wan_IP" ] || [ "$Pri_Wan_IP" = "no attribute information" ]
		then
			WAN_IP="0.0.0.0"
		fi
	fi

DDNS_ENABLE_X=`/userfs/bin/tcapi get Ddns_Entry Active`
DDNS_HOSTNAME_X=`/userfs/bin/tcapi get Ddns_Entry MYHOST`
RFW_ENABLE_X=`/userfs/bin/tcapi get Firewall_Entry fw_enable_x`
LOCAL_DOMAIN=`/userfs/bin/tcapi get SysInfo_Entry local_domain`
HTTP_AUTOLOGOUT=`/userfs/bin/tcapi get Misc_Entry http_autologout`
	if [ "$HTTP_AUTOLOGOUT" = "no attribute information" ];then
		HTTP_AUTOLOGOUT="30";
	fi
SW_MODE="1"
HTTP_ENABLE_TMP=`/userfs/bin/tcapi get Https_Entry http_enable`
if [ "$HTTP_ENABLE_TMP" = "1" ]; then
	HTTP_ENABLE=0;
elif [ "$HTTP_ENABLE_TMP" = "2" ]; then
	HTTP_ENABLE=1;
elif [ "$HTTP_ENABLE_TMP" = "3" ]; then
	HTTP_ENABLE=2;
else
	HTTP_ENABLE=0;
fi
else
APPS_MOUNTED_PATH=`nvram get apps_mounted_path`
APPS_INSTALL_FOLDER=`nvram get apps_install_folder`
APPS_INSTALL_PATH=$APPS_MOUNTED_PATH/$APPS_INSTALL_FOLDER
APPS_DEV=`nvram get apps_dev`

MEMORY_TOTAL=`free | head -2 |tail -1 |awk '{print $2}'`

LANGUAGE_R=`nvram get preferred_lang`

#PRODUCTID=`nvram get productid`
PRODUCTID=`nvram get odmpid`
if [ "$PRODUCTID" == "" ]; then
   PRODUCTID=`nvram get productid`
fi
LAN_IP=`nvram get lan_ipaddr`
MISCR_HTTPPORT_X=`nvram get misc_httpport_x`
MISCR_HTTPSPORT_X=`nvram get misc_httpsport_x`
HTTPS_LANPORT=`nvram get https_lanport`
MISCR_HTTP_X=`nvram get misc_http_x`
HTTP_PASSWD=`nvram get http_passwd`
WAN_IP=`nvram get wan0_ipaddr`
DDNS_ENABLE_X=`nvram get ddns_enable_x`
DDNS_HOSTNAME_X=`nvram get ddns_hostname_x`
RFW_ENABLE_X=`nvram get fw_enable_x`
LOCAL_DOMAIN=`nvram get local_domain`
HTTP_AUTOLOGOUT=`nvram get http_autologout`
	if [ "$HTTP_AUTOLOGOUT" == "" ];then
		HTTP_AUTOLOGOUT="30"
	fi
SW_MODE=`nvram get sw_mode`
HTTP_ENABLE=`nvram get http_enable`
fi
dir_router_file=/tmp/asus_router.conf

APPS_MOUNTED_TYPE=`mount |grep "/dev/$APPS_DEV on " |awk '{print $5}'`

APP_OWNER_ASUS="/opt/lib/ipkg/lists/optware.asus"
Utility_Ver_CHECK=`cat "$APP_OWNER_ASUS" |grep "Filename: DM2_"`
Utility_Ver=`echo $Utility_Ver_CHECK |awk 'BEGIN{FS=": "}{print $2}'`

case "$1" in
  
  general-check)
		cat $dir_router_file | while read line
		do 
			line_tmp=`echo $line |awk 'BEGIN{FS="="}{print $1}'`
			case "$line_tmp" in
				"Utility_Ver")
					Utility_CHECK_TMP_1=`echo $line |grep "Utility_Ver=" | awk 'BEGIN{FS="="}{print $2}'`
					if [ -f "/userfs/bin/tcapi" ];then
						if [ "$Utility_CHECK_TMP_1" = "" ]; then
							rm -rf /tmp/asus_router.conf
						fi
					else
						if [ "$Utility_CHECK_TMP_1" == "" ]; then
							rm -rf /tmp/asus_router.conf
						fi
					fi
				;;
				"local_domain")
					LOCAL_DOMAIN_TMP_1=`echo $line |grep "local_domain=" | awk 'BEGIN{FS="="}{print $2}'`
					if [ -f "/userfs/bin/tcapi" ];then
						if [ "$LOCAL_DOMAIN_TMP_1" = "" ]; then
							rm -rf /tmp/asus_router.conf
						fi
					else
						if [ "$LOCAL_DOMAIN_TMP_1" == "" ]; then
							rm -rf /tmp/asus_router.conf
						fi
					fi
				;;
				"HTTP_AUTOLOGOUT")
					HTTP_AUTOLOGOUT_TMP=`echo $line |grep "HTTP_AUTOLOGOUT=" | awk 'BEGIN{FS="="}{print $2}'`
					if [ -f "/userfs/bin/tcapi" ];then
						if [ "$HTTP_AUTOLOGOUT_TMP" = "" ]; then
							rm -rf /tmp/asus_router.conf
						fi
					else
						if [ "$HTTP_AUTOLOGOUT_TMP" == "" ]; then
							rm -rf /tmp/asus_router.conf
						fi
					fi
				;;
				"MISCR_HTTPSPORT_X")
					MISCR_HTTPSPORT_X_TMP=`echo $line |grep "MISCR_HTTPSPORT_X=" | awk 'BEGIN{FS="="}{print $2}'`
					if [ -f "/userfs/bin/tcapi" ];then
						if [ "$MISCR_HTTPSPORT_X_TMP" = "" ]; then
							rm -rf /tmp/asus_router.conf
						fi
					else
						if [ "$MISCR_HTTPSPORT_X_TMP" == "" ]; then
							rm -rf /tmp/asus_router.conf
						fi
					fi
				;;
				"HTTPS_LANPORT")
					HTTPS_LANPORT_TMP=`echo $line |grep "HTTPS_LANPORT=" | awk 'BEGIN{FS="="}{print $2}'`
					if [ -f "/userfs/bin/tcapi" ];then
						if [ "$HTTPS_LANPORT_TMP" = "" ]; then
							rm -rf /tmp/asus_router.conf
						fi
					else
						if [ "$HTTPS_LANPORT_TMP" == "" ]; then
							rm -rf /tmp/asus_router.conf
						fi
					fi
				;;
				"SW_MODE")
					SW_MODE_TMP=`echo $line |grep "SW_MODE=" | awk 'BEGIN{FS="="}{print $2}'`
					if [ -f "/userfs/bin/tcapi" ];then
						if [ "$SW_MODE_TMP" = "" ]; then
							rm -rf /tmp/asus_router.conf
						fi
					else
						if [ "$SW_MODE_TMP" == "" ]; then
							rm -rf /tmp/asus_router.conf
						fi
					fi
				;;
				
 			*)
			esac
		done

	if [ ! -f "$dir_router_file" ]; then
		echo "\$EX_MAINDIR=$APPS_MOUNTED_PATH">/tmp/asus_router.conf
		echo "BASE_PATH=$APPS_MOUNTED_PATH">>/tmp/asus_router.conf
		echo "LAN_IP=$LAN_IP">>/tmp/asus_router.conf
		echo "MISCR_HTTPPORT_X=$MISCR_HTTPPORT_X">>/tmp/asus_router.conf
		echo "MISCR_HTTP_X=$MISCR_HTTP_X">>/tmp/asus_router.conf
		echo "PRODUCTID=$PRODUCTID">>/tmp/asus_router.conf
		echo "APPS_DEV=$APPS_DEV">>/tmp/asus_router.conf
		echo "WAN_IP=$WAN_IP">>/tmp/asus_router.conf
		echo "DDNS_ENABLE_X=$DDNS_ENABLE_X">>/tmp/asus_router.conf
		echo "DDNS_HOSTNAME_X=$DDNS_HOSTNAME_X">>/tmp/asus_router.conf
		echo "RFW_ENABLE_X=$RFW_ENABLE_X">>/tmp/asus_router.conf
		echo "DEVICE_TYPE=$APPS_MOUNTED_TYPE">>/tmp/asus_router.conf
		echo "Utility_Ver=$Utility_Ver">>/tmp/asus_router.conf	
		if [ -z "$LOCAL_DOMAIN" ]; then	
			echo "local_domain=www.asusnetwork.net">>/tmp/asus_router.conf
		else
			echo "local_domain=$LOCAL_DOMAIN">>/tmp/asus_router.conf
		fi
		echo "HTTP_AUTOLOGOUT=$HTTP_AUTOLOGOUT">>/tmp/asus_router.conf
		echo "MISCR_HTTPSPORT_X=$MISCR_HTTPSPORT_X">>/tmp/asus_router.conf
		echo "HTTPS_LANPORT=$HTTPS_LANPORT">>/tmp/asus_router.conf		
		echo "SW_MODE=$SW_MODE">>/tmp/asus_router.conf   	
		echo "HTTP_ENABLE=$HTTP_ENABLE">>/tmp/asus_router.conf
	fi
    ;;

  general-renew)
    ;;

  router-general)

		echo "\$EX_MAINDIR=$APPS_MOUNTED_PATH">/tmp/asus_router.conf
		echo "BASE_PATH=$APPS_MOUNTED_PATH">>/tmp/asus_router.conf
		echo "LAN_IP=$LAN_IP">>/tmp/asus_router.conf
		echo "MISCR_HTTPPORT_X=$MISCR_HTTPPORT_X">>/tmp/asus_router.conf
		echo "MISCR_HTTP_X=$MISCR_HTTP_X">>/tmp/asus_router.conf
		echo "PRODUCTID=$PRODUCTID">>/tmp/asus_router.conf
		echo "APPS_DEV=$APPS_DEV">>/tmp/asus_router.conf
		echo "WAN_IP=$WAN_IP">>/tmp/asus_router.conf
		echo "DDNS_ENABLE_X=$DDNS_ENABLE_X">>/tmp/asus_router.conf
		echo "DDNS_HOSTNAME_X=$DDNS_HOSTNAME_X">>/tmp/asus_router.conf
		echo "RFW_ENABLE_X=$RFW_ENABLE_X">>/tmp/asus_router.conf
		echo "DEVICE_TYPE=$APPS_MOUNTED_TYPE">>/tmp/asus_router.conf
		echo "Utility_Ver=$Utility_Ver">>/tmp/asus_router.conf	
		if [ -z "$LOCAL_DOMAIN" ]; then	
			echo "local_domain=www.asusnetwork.net">>/tmp/asus_router.conf
		else
			echo "local_domain=$LOCAL_DOMAIN">>/tmp/asus_router.conf
		fi
		echo "HTTP_AUTOLOGOUT=$HTTP_AUTOLOGOUT">>/tmp/asus_router.conf
		echo "MISCR_HTTPSPORT_X=$MISCR_HTTPSPORT_X">>/tmp/asus_router.conf
		echo "HTTPS_LANPORT=$HTTPS_LANPORT">>/tmp/asus_router.conf		
		echo "SW_MODE=$SW_MODE">>/tmp/asus_router.conf  	
		echo "HTTP_ENABLE=$HTTP_ENABLE">>/tmp/asus_router.conf
    ;;

  router-general-renew)
		BASE_PATH=`echo $APPS_MOUNTED_PATH |awk 'BEGIN{FS="/"}{print $4}'`
		sed -i "1s/^.*$/\$EX_MAINDIR=\/tmp\/mnt\/$BASE_PATH/" /tmp/asus_router.conf
		sed -i "2s/^.*$/BASE_PATH=\/tmp\/mnt\/$BASE_PATH/" /tmp/asus_router.conf
		sed -i "3s/^.*$/LAN_IP=$LAN_IP/" /tmp/asus_router.conf
		sed -i "4s/^.*$/MISCR_HTTPPORT_X=$MISCR_HTTPPORT_X/" /tmp/asus_router.conf
		sed -i "5s/^.*$/MISCR_HTTP_X=$MISCR_HTTP_X/" /tmp/asus_router.conf
		sed -i "6s/^.*$/PRODUCTID=$PRODUCTID/" /tmp/asus_router.conf
		sed -i "7s/^.*$/APPS_DEV=$APPS_DEV/" /tmp/asus_router.conf
		sed -i "8s/^.*$/WAN_IP=$WAN_IP/" /tmp/asus_router.conf
		sed -i "9s/^.*$/DDNS_ENABLE_X=$DDNS_ENABLE_X/" /tmp/asus_router.conf
		sed -i "10s/^.*$/DDNS_HOSTNAME_X=$DDNS_HOSTNAME_X/" /tmp/asus_router.conf
		sed -i "11s/^.*$/RFW_ENABLE_X=$RFW_ENABLE_X/" /tmp/asus_router.conf
		sed -i "12s/^.*$/DEVICE_TYPE=$APPS_MOUNTED_TYPE/" /tmp/asus_router.conf
		sed -i "13s/^.*$/Utility_Ver=$Utility_Ver/" /tmp/asus_router.conf
		sed -i "14s/^.*$/local_domain=$LOCAL_DOMAIN/" /tmp/asus_router.conf
		sed -i "15s/^.*$/HTTP_AUTOLOGOUT=$HTTP_AUTOLOGOUT/" /tmp/asus_router.conf
		sed -i "16s/^.*$/MISCR_HTTPSPORT_X=$MISCR_HTTPSPORT_X/" /tmp/asus_router.conf
		sed -i "17s/^.*$/HTTPS_LANPORT=$HTTPS_LANPORT/" /tmp/asus_router.conf
		sed -i "18s/^.*$/SW_MODE=$SW_MODE/" /tmp/asus_router.conf
		sed -i "19s/^.*$/HTTP_ENABLE=$HTTP_ENABLE/" /tmp/asus_router.conf
		touch /tmp/asus_router_tag
		rm -rf /tmp/asus_routergen_tag
    ;;

  *)



    #echo "Usage: /opt/etc/init.d/dm {start|stop|restart|force-reload|firewall-start|firewall-stop|firewall-restart|lighttpd-restart|general-renew}"
    exit 1
    ;;
esac
