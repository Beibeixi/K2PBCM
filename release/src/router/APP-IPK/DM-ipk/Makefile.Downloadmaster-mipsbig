export SRCBASE := $(shell pwd)
BUILD := i686-linux
HOSTCC := gcc
PLATFORM := mips-linux
CROSS_COMPILE := mips-linux-uclibc-
CONFIGURE := ./configure --host=mips-linux --build=$(BUILD)
#TOOLCHAIN := $(shell cd $(dir $(shell which $(CROSS_COMPILE)gcc))/../../../.. && pwd)
#IPKG_TOOLS := $(shell cd $(dir $(shell which $(CROSS_COMPILE)gcc))/../../../../ipkg-utils-1.7 && pwd)
#SRCBASE := $(shell cd $(dir $(shell which $(CROSS_COMPILE)gcc))/../../../../../staging && pwd)
export IPKG_TOOLS := /opt/trendchip/ipkg-utils-1.7
export LD_DIR := /opt/trendchip/mips-linux-uclibc/usr
export LIBPREF=$(LD_DIR)

export CC := $(CROSS_COMPILE)gcc
export AR := $(CROSS_COMPILE)ar
export AS := $(CROSS_COMPILE)as
export LD := $(CROSS_COMPILE)ld
export NM := $(CROSS_COMPILE)nm
export RANLIB := $(CROSS_COMPILE)ranlib
export STRIP := $(CROSS_COMPILE)strip
export SIZE := $(CROSS_COMPILE)size
export CXX := $(CROSS_COMPILE)g++
export CXXCPP := $(CROSS_COMPILE)g++ -E
# libpasswd:
export LDFLAGS_P := -L$(TOOLCHAIN)/lib -lcrypt -Wl,-rpath,/opt/lib  
export	CFLAGS_P := -Os -Wall  -fPIC	
#
# standard packages
#
obj-y += mkdir
obj-y += DM-UI
obj-y += CGI
obj-y += dm2_detect
obj-y += snarf
obj-y += zlib
obj-y += libpng
obj-y += pcre
obj-y += libxml2
obj-y += openssl
obj-y += nzbget
obj-y += libevent
obj-y += libcurl
obj-y += libpasswd
obj-y += nvram-encrypt
obj-y += transmission-2.92
obj-y += readline
obj-y += expat
obj-y += wxbase
obj-y += crypto
obj-y += amule
obj-y += rss
obj-y += DownloadMaster-ipk
obj-y += openssl-ipk
obj-y += libcurl-ipk

all: $(obj-y)

clean:libpasswd-clean nvram-encrypt-clean

	-@$(MAKE) -C CGI2.1 clean
	-rm CGI2.1/stamp-h2
	-rm dm2_detect/stamp-h2
	-@$(MAKE) -C dm2_detect clean
	-rm snarf-7.0/stamp-h2
	-@$(MAKE) -C snarf-7.0 clean
	-rm zlib/stamp-h2
	-@$(MAKE) -C zlib clean
	-@$(MAKE) -C ncurses clean
	-rm ncurses/stamp-h2
	-@$(MAKE) -C libpng clean
	-rm libpng/stamp-h2
	-@$(MAKE) -C pcre clean
	-rm pcre/stamp-h2
	-@$(MAKE) -C libxml2 clean
	-rm libxml2/stamp-h2
	#@$(MAKE) -C sqlite-3.7.3 clean
	-@$(MAKE) -C openssl clean
	-rm openssl/stamp-h2
	#@$(MAKE) -C lighttpd-1.4.28 clean
	-@$(MAKE) -C nzbget-0.7.0 clean
	-rm nzbget-0.7.0/stamp-h2
	#@$(MAKE) -C libevent clean
	-@$(MAKE) -C libcurl clean
	-rm libcurl/stamp-h2
	#@$(MAKE) -C transmission-2.82 clean
	-@$(MAKE) -C transmission-2.92 clean
	-rm transmission-2.92/stamp-h2
	-@$(MAKE) -C readline clean
	-rm readline/stamp-h2
	-@$(MAKE) -C expat clean
	-rm expat/stamp-h2
	-@$(MAKE) -C wxbase clean
	-rm wxbase/stamp-h2
	@$(MAKE) -C crypto++ clean
	-rm crypto++/stamp-h2
	-@$(MAKE) -C amuled clean
	-rm amuled/stamp-h2

distclean:clean
	rm -rf DownloadMaster-ipk-2.1/opt/etc/downloadmaster/downloadmaster/*
	rm -rf DownloadMaster-ipk-2.1/opt/tmp/bin/*
	rm -rf $(SRCBASE)/DownloadMaster-ipk-2.1/opt/etc/init.d/S50downloadmaster
	rm -rf $(SRCBASE)/DownloadMaster-ipk-2.1/CONTROL/control
	rm -rf openssl-ipk-2.1/opt/tmp/share/openssl/*
	rm -rf openssl-ipk-2.1/opt/tmp/lib/*
	rm -rf $(SRCBASE)/openssl-ipk-2.1/CONTROL/control
	rm -rf $(SRCBASE)/libcurl-ipk-2.1/CONTROL/control
	rm -rf $(SRCBASE)/libcurl-ipk-2.1/opt/tmp/bin/*
	rm -rf $(SRCBASE)/libcurl-ipk-2.1/opt/tmp/lib/*

mkdir:
	-mkdir -p openssl-ipk-2.1/opt/tmp/bin/
	-mkdir -p openssl-ipk-2.1/opt/tmp/lib/
	-mkdir -p DownloadMaster-ipk-2.1/opt/etc/downloadmaster/downloadmaster
	-mkdir -p DownloadMaster-ipk-2.1/opt/tmp/bin/
	-mkdir -p openssl-ipk-2.1/opt/tmp/share/openssl/
	-mkdir -p libcurl-ipk-2.1/opt/tmp/bin/
	-mkdir -p libcurl-ipk-2.1/opt/tmp/lib/
	-mkdir -p DownloadMaster-ipk-2.1/opt/etc/init.d/

DM-UI:
	rm -rf DownloadMaster-ipk-2.1/opt/etc/downloadmaster/downloadmaster
	cp -rf downloadmaster-UI DownloadMaster-ipk-2.1/opt/etc/downloadmaster/downloadmaster

CGI:

	@$(MAKE) -C  CGI2.1 clean
	@$(MAKE) CFLAGS=-DDM_MIPSBIG -C CGI2.1 all
	$(STRIP) CGI2.1/*.cgi
	cp -rf CGI2.1/*.cgi DownloadMaster-ipk-2.1/opt/etc/downloadmaster/downloadmaster/


dm2_detect/stamp-h1: 
		cd dm2_detect \
		touch stamp-h1;	
dm2_detect: dm2_detect/stamp-h1
	@$(MAKE) -C dm2_detect clean	
	@$(MAKE) -C dm2_detect all
	$(STRIP) dm2_detect/dm2_detect
	cp -rf dm2_detect/dm2_detect DownloadMaster-ipk-2.1/opt/tmp/bin/

snarf:
	@$(MAKE) -C snarf-7.0 all
	$(STRIP) snarf-7.0/dm2_snarf
	$(STRIP) snarf-7.0/dm2_snarfmaster
	cp -rf snarf-7.0/dm2_snarf DownloadMaster-ipk-2.1/opt/tmp/bin/dm2_snarf
	cp -rf snarf-7.0/dm2_snarfmaster DownloadMaster-ipk-2.1/opt/tmp/bin/dm2_snarfmaster

zlib/stamp-h2: 
		cd zlib &&\
		touch stamp-h2;	

.PHONY: zlib/stamp-h2

zlib: zlib/stamp-h2
	cd zlib && \
	AR=$(AR) AS=$(AS) LD=$(LD) NM=$(NM) CC=$(CC) CPP="$(CC) -E" GCC=$(CC) CXX=$(CXX) RANLIB=$(RANLIB) STRIP=$(STRIP) \
		prefix=$(SRCBASE)/opt \
		./configure \
		--shared
	@$(MAKE) -C  zlib all
	cd zlib && \
	$(MAKE) install


ncurses/stamp-h2: 
		cd ncurses &&\
		touch stamp-h2;	

ncurses: ncurses/stamp-h2
	cd ncurses && \
	AR=$(AR) AS=$(AS) LD=$(LD) NM=$(NM) CC=$(CC) CPP="$(CC) -E" GCC=$(CC) CXX=$(CXX) RANLIB=$(RANLIB) STRIP=$(STRIP) \
	./configure --host=mips-linux --build=i686-linux --prefix=$(SRCBASE) --with-shared --enable-symlinks --disable-big-core --with-build-cc=gcc --without-cxx-binding --without-ada
	@$(MAKE) -C  ncurses all
	cd ncurses && \
	$(MAKE) install
	#@$(MAKE) -C ncurses/include
	#@$(MAKE) -C ncurses/progs tic

libpng/stamp-h2: 
		cd libpng &&\
		touch stamp-h2;	

libpng: libpng/stamp-h2
	cd libpng && \
	AR=$(AR) AS=$(AS) LD=$(LD) NM=$(NM) CC=$(CC) CPP="$(CC) -E" GCC=$(CC) CXX=$(CXX) RANLIB=$(RANLIB) STRIP=$(STRIP) \
		CPPFLAGS="-O2   -pipe  -I$(SRCBASE)/opt/include " \
		LDFLAGS=" -L$(SRCBASE)/../lib -Wl,-rpath,/opt/lib -Wl,-rpath-link,$(SRCBASE)/../lib " \
		./configure \
		--build=i686-linux \
		--host=mips-linux \
		--target=mips-linux \
		--prefix=$(SRCBASE)/opt \
		--disable-nls \
		--disable-static
	@$(MAKE) -C  libpng all
	cd libpng && \
	$(MAKE) install

pcre/stamp-h2: 
		cd pcre &&\
		touch stamp-h2;	
.PHONY:pcre/stamp-h2

pcre: pcre/stamp-h2
	cd pcre && \
	AR=$(AR) AS=$(AS) LD=$(LD) NM=$(NM) CC=$(CC) CPP="$(CC) -E" GCC=$(CC) CXX=$(CXX) RANLIB=$(RANLIB) STRIP=$(STRIP) \
	./configure --prefix=$(SRCBASE) --host=$(PLATFORM) 
	@$(MAKE) -C  pcre all 
	cd pcre && \
	$(MAKE) install

libxml2/stamp-h2: 
		cd libxml2 &&\
		touch stamp-h2;	

.PHONY: libxml2/stamp-h2
libxml2: libxml2/stamp-h2
	cd libxml2 && \
	AR=$(AR) AS=$(AS) LD=$(LD) NM=$(NM) CC=$(CC) CPP="$(CC) -E" GCC=$(CC) CXX=$(CXX) RANLIB=$(RANLIB) STRIP=$(STRIP) \
	./configure --prefix=$(SRCBASE)/opt --host=$(PLATFORM)  --without-python
	@$(MAKE) -C  libxml2 all
	- cd libxml2 && \
	$(MAKE) install

sqlite:
	cd sqlite-3.7.3 && \
	AR=$(AR) AS=$(AS) LD=$(LD) NM=$(NM) CC=$(CC) CPP="$(CC) -E" GCC=$(CC) CXX=$(CXX) RANLIB=$(RANLIB) STRIP=$(STRIP) \
	./configure --build=i686-linux --prefix=$(SRCBASE) --host=$(PLATFORM)   --enable-shared --enable-static \
	--disable-readline  --enable-threadsafe
	@$(MAKE) -C sqlite-3.7.3 all 
	cd sqlite-3.7.3 && \
	$(MAKE) install


openssl/stamp-h2: 
		cd openssl  &&\
		touch stamp-h2;	

.PHONY: openssl/stamp-h2

openssl: openssl/stamp-h2
	cd openssl && \
	AR=$(AR) AS=$(AS) LD=$(LD) NM=$(NM) CC=$(CC) CPP="$(CC) -E" GCC=$(CC) CXX=$(CXX) RANLIB=$(RANLIB) STRIP=$(STRIP) \
		./Configure \
			shared no-zlib \
			-O2   -pipe  -I$(SRCBASE)/include \
			--openssldir=/opt/share/openssl \
			--prefix=$(SRCBASE)/opt \
			--install_prefix=$(SRCBASE) \
			linux-generic32 
	@$(MAKE) -C openssl \
		AR=$(AR) AS=$(AS) LD=$(LD) NM=$(NM) CC=$(CC) CPP="$(CC) -E" GCC=$(CC) CXX=$(CXX) RANLIB=$(RANLIB) STRIP=$(STRIP) \
		AR="$(AR) r" \
		\
		\
		MANDIR=/opt/man \
		EX_LIBS=" -L$(SRCBASE)/../lib -Wl,-rpath,/opt/lib -Wl,-rpath-link,$(SRCBASE)/../lib -ldl" \
		DIRS="crypto ssl apps test"
	 cd openssl && \
	$(MAKE) install
	cp -rf openssl/apps/openssl openssl-ipk-2.1/opt/tmp/bin/
	cp -rf openssl/apps/openssl.cnf openssl-ipk-2.1/opt/tmp/share/openssl/
	cp -rf openssl/libssl.so.1.0.0 openssl-ipk-2.1/opt/tmp/lib/
	cp -rf openssl/libssl.so openssl-ipk-2.1/opt/tmp/lib/
	cp -rf openssl/libcrypto.so.1.0.0 openssl-ipk-2.1/opt/tmp/lib/
	cp -rf openssl/libcrypto.so openssl-ipk-2.1/opt/tmp/lib/
                       

nzbget/stamp-h2: 
		cd nzbget-0.7.0 \
		touch stamp-h2;

#nzbget:	nzbget/stamp-h2	
#	@$(MAKE) -C nzbget-0.7.0 all
#	$(STRIP) nzbget-0.7.0/dm2_nzbget
#	cp -rf nzbget-0.7.0/dm2_nzbget DownloadMaster-ipk-2.1/opt/tmp/bin/
	
nzbget:  nzbget/stamp-h2
	cd nzbget-0.7.0 && \
	LIBPREF=$(LD_DIR) \
	CPPFLAGS="-O2   -pipe  -I$(SRCBASE)/opt/include " \
	LDFLAGS=" -L$(SRCBASE)/opt/lib -Wl,-rpath,/opt/lib -Wl,-rpath-link,$(SRCBASE)/opt/lib " \
	./configure --build=i386-pc-linux-gnu --host=mips-linux --disable-parcheck --prefix=$(SRCBASE)/opt --with-libxml2-includes=$(SRCBASE)/libxml2/include --with-openssl-includes=$(SRCBASE)/openssl/include --with-libxml2-libraries=$(SRCBASE)/libxml2/.libs/ --with-openssl-libraries=$(SRCBASE)/openssl --with-libcurses-includes=$(SRCBASE)/ncurses/include --with-libcurses-libraries=$(SRCBASE)/ncurses/lib
	@$(MAKE) -C nzbget-0.7.0 all
	$(STRIP) nzbget-0.7.0/nzbget
	cp -rf nzbget-0.7.0/nzbget DownloadMaster-ipk-2.1/opt/tmp/bin/dm2_nzbget

rss/stamp-h2: 
		cd rss \
		touch stamp-h2;

rss:	rss/stamp-h2	
	@$(MAKE) -C rss all
	$(STRIP) rss/dm2_rss
	cp -rf rss/dm2_rss DownloadMaster-ipk-2.1/opt/tmp/bin/

libevent/stamp-h2: 
		cd libevent \
		touch stamp-h2;

libevent: libevent/stamp-h2
	cd libevent && \
	AR=$(AR) AS=$(AS) LD=$(LD) NM=$(NM) CC=$(CC) CPP="$(CC) -E" GCC=$(CC) CXX=$(CXX) RANLIB=$(RANLIB) STRIP=$(STRIP) \
	./configure --build=i686-linux --host=mips-linux --target=mips-linux --prefix=$(SRCBASE)
	@$(MAKE) -C libevent all
	 cd libevent && \
	$(MAKE) install

libcurl/stamp-h2: 
		cd libcurl \
		touch stamp-h2;

libcurl: libcurl/stamp-h2
	cd libcurl && \
	AR=$(AR) AS=$(AS) LD=$(LD) NM=$(NM) CC=$(CC) CPP="$(CC) -E" GCC=$(CC) CXX=$(CXX) RANLIB=$(RANLIB) STRIP=$(STRIP) \
	./configure --build=i686-linux --host=mips-linux --target=mips-linux --prefix=$(SRCBASE)/opt --disable-thread --enable-shared --disable-static --enable-ares --enable-cookies --enable-crypto-auth --enable-nonblocking --enable-file --enable-ftp --enable-http --enable-ipv6 --enable-tftp --disable-nls --disable-ares --disable-dict --disable-debug --disable-gopher --disable-ldap --disable-manual --disable-telnet --disable-verbose --with-random=/dev/urandom --with-ssl=$(SRCBASE)/openssl --without-gnutls --without-krb4 --without-libidn --with-zlib=$(SRCBASE)/zlib --with-ca-bundle=$(SRCBASE)/share/curl/curl-ca-bundle.crt
	@$(MAKE) -C libcurl all
	 cd libcurl && \
	$(MAKE) install
	cp -rf $(SRCBASE)/opt/bin/curl $(SRCBASE)/libcurl-ipk-2.1/opt/tmp/bin/
	#cp -rf $(SRCBASE)/opt/bin/curl-config libcurl-ipk-2.1/opt/tmp/bin/
	cp -rf $(SRCBASE)/opt/lib/libcurl.so $(SRCBASE)/libcurl-ipk-2.1/opt/tmp/lib/
	cp -rf $(SRCBASE)/opt/lib/libcurl.so.4 $(SRCBASE)/libcurl-ipk-2.1/opt/tmp/lib/
	cp -rf $(SRCBASE)/opt/lib/libcurl.so.4.5.0 $(SRCBASE)/libcurl-ipk-2.1/opt/tmp/lib/

transmission-2.92/stamp-h2: 
		cd transmission-2.92 \
		touch stamp-h2;

transmission-2.92: libpasswd nvram-encrypt transmission-2.92/stamp-h2
	cd transmission-2.92 && \
	LDFLAGS="-L$(SRCBASE)/lib -lpasswd -Wl,-rpath,/opt/lib -Wl,-rpath-link,$(SRCBASE)/../lib"  \
	CFLAGS="-DDM_MIPSBIG" \
	AR=$(AR) AS=$(AS) LD=$(LD) NM=$(NM) CC=$(CC) CPP="$(CC) -E" GCC=$(CC) CXX=$(CXX) RANLIB=$(RANLIB) STRIP=$(STRIP) \
	OPENSSL_CFLAGS='-I$(SRCBASE)/include  ' OPENSSL_LIBS='-Wl,-rpath,/opt/lib -Wl,-rpath-link,$(SRCBASE)/../lib -L$(SRCBASE)/lib -lssl -lcrypto -ldl  ' LIBCURL_CFLAGS='-I$(SRCBASE)/include  ' LIBCURL_LIBS='-L$(SRCBASE)/lib -lcurl  ' LIBEVENT_CFLAGS='-I$(SRCBASE)/include' LIBEVENT_LIBS='-L$(SRCBASE) -levent  ' ZLIB_CFLAGS='-I$(SRCBASE)/include ' ZLIB_LIBS='-L$(SRCBASE)/lib -lz ' \
	./configure --without-gtk --host=mips-linux --target=mips-linux --prefix=/opt --libdir=/opt/lib/
	@$(MAKE) -C transmission-2.92 all
	$(STRIP) transmission-2.92/daemon/transmission-daemon
	cp -rf transmission-2.92/daemon/transmission-daemon DownloadMaster-ipk-2.1/opt/tmp/bin/dm2_transmission-daemon

readline/stamp-h2: 
		cd readline \
		touch stamp-h2;
readline: readline/stamp-h2
	cd readline && \
	AR=$(AR) AS=$(AS) LD=$(LD) NM=$(NM) CC=$(CC) CPP="$(CC) -E" GCC=$(CC) CXX=$(CXX) RANLIB=$(RANLIB) STRIP=$(STRIP) \
	./configure --build=i686-linux --host=mips-linux --target=mips-linux --prefix=$(SRCBASE) --disable-nls --disable-static --with-curses
	@$(MAKE) -C readline all
	 cd readline && \
	$(MAKE) install \
	#$(STRIP) readline/shlib/libreadline.so.6.1 \
	#cp -rf readline/shlib/libreadline.so.6.1 DownloadMaster-ipk-2.1/opt/tmp/lib/libreadline.so.6

expat/stamp-h2: 
		cd expat \
		touch stamp-h2;
expat: expat/stamp-h2
	cd expat && \
	AR=$(AR) AS=$(AS) LD=$(LD) NM=$(NM) CC=$(CC) CPP="$(CC) -E" GCC=$(CC) CXX=$(CXX) RANLIB=$(RANLIB) STRIP=$(STRIP) \
	./configure --build=i686-linux --host=mips-linux --target=mips-linux --disable-static --prefix=$(SRCBASE) --disable-nls
	@$(MAKE) -C expat all
	 cd expat && \
	$(MAKE) install

wxbase/stamp-h2: 
		cd wxbase \
		touch stamp-h2;
wxbase: wxbase/stamp-h2
	cd wxbase && \
	AR=$(AR) AS=$(AS) LD=$(LD) NM=$(NM) CC=$(CC) CPP="$(CC) -E" GCC=$(CC) CXX=$(CXX) RANLIB=$(RANLIB) STRIP=$(STRIP) \
		CPPFLAGS="-O2   -pipe  -I$(SRCBASE)/include " \
		LDFLAGS=" -L$(SRCBASE)/lib -Wl,-rpath,/opt/lib -Wl,-rpath-link,$(SRCBASE)/../lib " \
		ac_cv_path_SDL_CONFIG=no \
		./configure \
		--prefix=$(SRCBASE) \
		--build=i686-linux \
		--host=mips-linux \
		--target=mips-linux \
		--disable-precomp-headers \
		--disable-gui \
		--without-subdirs \
		--with-regex=builtin \
		--with-zlib=sys \
		--with-expat=sys \
		--enable-largefile \
		--without-sdl \
		--disable-sdltest \
		--enable-unicode 
	@$(MAKE) -C wxbase all
	 cd wxbase && \
	$(MAKE) install 
	#$(STRIP) wxbase/lib/libwx_baseu-2.8.so.0.8.0 
	#$(STRIP) wxbase/lib/libwx_baseu_net-2.8.so.0.8.0 
	#cp -rf wxbase/lib/libwx_baseu-2.8.so.0.8.0 DownloadMaster-ipk-2.1/opt/tmp/lib/libwx_baseu-2.8.so.0 
	#cp -rf wxbase/lib/libwx_baseu_net-2.8.so.0.8.0 DownloadMaster-ipk-2.1/opt/tmp/lib/libwx_baseu_net-2.8.so.0

crypto/stamp-h2: 
		cd crypto++ \
		touch stamp-h2;

crypto: crypto/stamp-h2
	@$(MAKE) -C crypto++ \
		AR=$(AR) AS=$(AS) LD=$(LD) NM=$(NM) CC=$(CC) CPP="$(CC) -E" GCC=$(CC) CXX=$(CXX) RANLIB=$(RANLIB) STRIP=$(STRIP) \
		 \
		CPPFLAGS="-O2   -pipe  -I$(SRCBASE)/include " \
		LDFLAGS=" -L$(SRCBASE)/lib -Wl,-rpath,/opt/lib -Wl,-rpath-link,$(SRCBASE)/lib "
		mkdir -p $(SRCBASE)/include/cryptopp
		chmod -R 777 $(SRCBASE)/include/cryptopp
		cd crypto++ && \
		cp -rf *.h $(SRCBASE)/include/cryptopp &&\
		cp -rf *.a $(SRCBASE)/lib

amule:
	cd amuled && \
	AR=$(AR) AS=$(AS) LD=$(LD) NM=$(NM) CC=$(CC) CPP="$(CC) -E" GCC=$(CC) CXX=$(CXX) RANLIB=$(RANLIB) STRIP=$(STRIP) \
		CPPFLAGS="-O2   -pipe  -I$(SRCBASE)/include " \
		LDFLAGS=" -L$(SRCBASE)/lib -Wl,-rpath,/opt/lib -Wl,-rpath-link,$(SRCBASE)/opt/lib " \
		ac_cv_func_malloc_0_nonnull=yes ac_cv_func_realloc_0_nonnull=yes \
		./configure \
		--build=i686-linux --host=mips-linux --target=mips-linux --prefix=/opt --disable-debug --enable-optimize --enable-alcc --enable-amule-daemon --enable-webserver --enable-amulecmd --enable-upnp --disable-monolithic --disable-alc --disable-amulecmdgui --disable-cas --disable-wxcas --disable-systray --with-curl-config=$(SRCBASE)/bin/curl-config --with-gdlib-prefix=$(SRCBASE) --with-libpng-prefix=$(SRCBASE) --with-libupnp-prefix=$(SRCBASE) --with-wxbase-config=$(SRCBASE)/bin/wx-config --with-wx-config=$(SRCBASE)/bin/wx-config --with-wx-prefix=$(SRCBASE) --with-crypto-prefix=$(SRCBASE) --with-zlib=$(SRCBASE) --disable-nls --disable-static --disable-amule-gui --disable-webserver
	@$(MAKE) -C amuled HOSTCC=gcc
	$(STRIP) amuled/src/dm2_amule*
	cp -rf amuled/src/dm2_amuled DownloadMaster-ipk-2.1/opt/tmp/bin/
	cp -rf amuled/src/dm2_amulecmd DownloadMaster-ipk-2.1/opt/tmp/bin/
libpasswd-clean:
	-cd libpasswd &&  make clean
	-rm libpasswd/stamp-h2
libpasswd/stamp-h2:
	cd libpasswd \
	touch stamp-h2;
libpasswd:libpasswd/stamp-h2
	cd libpasswd &&  make install
	cp -rf libpasswd/libpasswd.so $(SRCBASE)/lib

nvram-encrypt-clean:
	-cd nvram-encrypt &&  make clean
	-rm nvram-encrypt/stamp-h2
nvram-encrypt/stamp-h2:
	cd nvram-encrypt \
	touch stamp-h2;
nvram-encrypt:nvram-encrypt/stamp-h2
	cd nvram-encrypt &&  CFLAGS="-fPIC -DDM_MIPSBIG" make 
	cp -rf nvram-encrypt/spwenc.o transmission-2.92/libtransmission
DownloadMaster-ipk:
	cp -rf $(SRCBASE)/DownloadMaster-ipk-tmp/opt/etc/asus_script/mipsbig/* 				$(SRCBASE)/DownloadMaster-ipk-2.1/opt/etc/asus_script/
	cp -rf $(SRCBASE)/DownloadMaster-ipk-tmp/opt/etc/init.d/S50downloadmaster-mipsbig 	$(SRCBASE)/DownloadMaster-ipk-2.1/opt/etc/init.d/S50downloadmaster
	cp -rf $(SRCBASE)/DownloadMaster-ipk-tmp/CONTROL/control-downloadmaster-mipsbig 	$(SRCBASE)/DownloadMaster-ipk-2.1/CONTROL/control
	cp -rf $(SRCBASE)/DownloadMaster-ipk-tmp/CONTROL/preinst-mipsbig 					$(SRCBASE)/DownloadMaster-ipk-2.1/CONTROL/preinst
	cp -rf $(SRCBASE)/DownloadMaster-ipk-tmp/CONTROL/postinst-arm-mipsel-misbig 		$(SRCBASE)/DownloadMaster-ipk-2.1/CONTROL/postinst
	$(STRIP) DownloadMaster-ipk-2.1/opt/tmp/bin/*
	#$(STRIP) DownloadMaster-ipk-2.1/opt/tmp/lib/*
	@$(IPKG_TOOLS)/ipkg-build DownloadMaster-ipk-2.1 ./


openssl-ipk:
	cp -rf $(SRCBASE)/DownloadMaster-ipk-tmp/CONTROL/control-asusopenssl-mipsbig $(SRCBASE)/openssl-ipk-2.1/CONTROL/control
	$(STRIP) openssl-ipk-2.1/opt/tmp/bin/*
	$(STRIP) openssl-ipk-2.1/opt/tmp/lib/*
	@$(IPKG_TOOLS)/ipkg-build openssl-ipk-2.1 ./
libcurl-ipk:
	cp -rf $(SRCBASE)/DownloadMaster-ipk-tmp/CONTROL/control-asuslibcurl-mipsbig $(SRCBASE)/libcurl-ipk-2.1/CONTROL/control
	$(STRIP) $(SRCBASE)/libcurl-ipk-2.1/opt/tmp/bin/*
	$(STRIP) $(SRCBASE)/libcurl-ipk-2.1/opt/tmp/lib/*
	@$(IPKG_TOOLS)/ipkg-build libcurl-ipk-2.1 ./

.PHONY: crypto/stamp-h2 CGI2.1/stamp-h2 amule/stamp-h2 wxbase/stamp-h2 expat/stamp-h2 readline/stamp-h2 transmission-2.92/stamp-h2 libcurl/stamp-h2 libevent/stamp-h2
.PHONY: nzbget/stamp-h2 ncurses/stamp-h2 openssl/stamp-h2 sqlite/stamp-h2
